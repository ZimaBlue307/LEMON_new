Module(body=[
  Expr(value=Str(s='Alexnet.')),
  Import(names=[alias(
    name='numpy',
    asname='np')]),
  Import(names=[alias(
    name='mindspore.nn',
    asname='nn')]),
  ImportFrom(
    module='mindspore.ops',
    names=[alias(
      name='operations',
      asname='P')],
    level=0),
  ImportFrom(
    module='mindspore.ops',
    names=[alias(
      name='functional',
      asname='F')],
    level=0),
  ImportFrom(
    module='mindspore.common.tensor',
    names=[alias(
      name='Tensor',
      asname=None)],
    level=0),
  Import(names=[alias(
    name='mindspore.common.dtype',
    asname='mstype')]),
  FunctionDef(
    name='fc_with_initialize',
    args=arguments(
      args=[
        arg(
          arg='input_channels',
          annotation=None),
        arg(
          arg='out_channels',
          annotation=None),
        arg(
          arg='has_bias',
          annotation=None)],
      vararg=None,
      kwonlyargs=[],
      kw_defaults=[],
      kwarg=None,
      defaults=[NameConstant(value=True)]),
    body=[Return(value=Call(
      func=Attribute(
        value=Name(
          id='nn',
          ctx=Load()),
        attr='Dense',
        ctx=Load()),
      args=[
        Name(
          id='input_channels',
          ctx=Load()),
        Name(
          id='out_channels',
          ctx=Load())],
      keywords=[keyword(
        arg='has_bias',
        value=Name(
          id='has_bias',
          ctx=Load()))]))],
    decorator_list=[],
    returns=None),
  ClassDef(
    name='DataNormTranspose',
    bases=[Attribute(
      value=Name(
        id='nn',
        ctx=Load()),
      attr='Cell',
      ctx=Load())],
    keywords=[],
    body=[
      Expr(value=Str(s='Normalize an tensor image with mean and standard deviation.\n\n    Given mean: (R, G, B) and std: (R, G, B),\n    will normalize each channel of the torch.*Tensor, i.e.\n    channel = (channel - mean) / std\n\n    Args:\n        mean (sequence): Sequence of means for R, G, B channels respectively.\n        std (sequence): Sequence of standard deviations for R, G, B channels\n            respectively.\n    ')),
      FunctionDef(
        name='__init__',
        args=arguments(
          args=[arg(
            arg='self',
            annotation=None)],
          vararg=None,
          kwonlyargs=[],
          kw_defaults=[],
          kwarg=None,
          defaults=[]),
        body=[
          Expr(value=Call(
            func=Attribute(
              value=Call(
                func=Name(
                  id='super',
                  ctx=Load()),
                args=[
                  Name(
                    id='DataNormTranspose',
                    ctx=Load()),
                  Name(
                    id='self',
                    ctx=Load())],
                keywords=[]),
              attr='__init__',
              ctx=Load()),
            args=[],
            keywords=[])),
          Assign(
            targets=[Attribute(
              value=Name(
                id='self',
                ctx=Load()),
              attr='mean',
              ctx=Store())],
            value=Call(
              func=Name(
                id='Tensor',
                ctx=Load()),
              args=[
                Call(
                  func=Attribute(
                    value=Call(
                      func=Attribute(
                        value=Name(
                          id='np',
                          ctx=Load()),
                        attr='array',
                        ctx=Load()),
                      args=[List(
                        elts=[
                          BinOp(
                            left=Num(n=0.485),
                            op=Mult(),
                            right=Num(n=255)),
                          BinOp(
                            left=Num(n=0.456),
                            op=Mult(),
                            right=Num(n=255)),
                          BinOp(
                            left=Num(n=0.406),
                            op=Mult(),
                            right=Num(n=255))],
                        ctx=Load())],
                      keywords=[]),
                    attr='reshape',
                    ctx=Load()),
                  args=[Tuple(
                    elts=[
                      Num(n=1),
                      Num(n=1),
                      Num(n=1),
                      Num(n=3)],
                    ctx=Load())],
                  keywords=[]),
                Attribute(
                  value=Name(
                    id='mstype',
                    ctx=Load()),
                  attr='float32',
                  ctx=Load())],
              keywords=[])),
          Assign(
            targets=[Attribute(
              value=Name(
                id='self',
                ctx=Load()),
              attr='std',
              ctx=Store())],
            value=Call(
              func=Name(
                id='Tensor',
                ctx=Load()),
              args=[
                Call(
                  func=Attribute(
                    value=Call(
                      func=Attribute(
                        value=Name(
                          id='np',
                          ctx=Load()),
                        attr='array',
                        ctx=Load()),
                      args=[List(
                        elts=[
                          BinOp(
                            left=Num(n=0.229),
                            op=Mult(),
                            right=Num(n=255)),
                          BinOp(
                            left=Num(n=0.224),
                            op=Mult(),
                            right=Num(n=255)),
                          BinOp(
                            left=Num(n=0.225),
                            op=Mult(),
                            right=Num(n=255))],
                        ctx=Load())],
                      keywords=[]),
                    attr='reshape',
                    ctx=Load()),
                  args=[Tuple(
                    elts=[
                      Num(n=1),
                      Num(n=1),
                      Num(n=1),
                      Num(n=3)],
                    ctx=Load())],
                  keywords=[]),
                Attribute(
                  value=Name(
                    id='mstype',
                    ctx=Load()),
                  attr='float32',
                  ctx=Load())],
              keywords=[]))],
        decorator_list=[],
        returns=None),
      FunctionDef(
        name='construct',
        args=arguments(
          args=[
            arg(
              arg='self',
              annotation=None),
            arg(
              arg='x',
              annotation=None)],
          vararg=None,
          kwonlyargs=[],
          kw_defaults=[],
          kwarg=None,
          defaults=[]),
        body=[
          Assign(
            targets=[Name(
              id='x',
              ctx=Store())],
            value=BinOp(
              left=BinOp(
                left=Name(
                  id='x',
                  ctx=Load()),
                op=Sub(),
                right=Attribute(
                  value=Name(
                    id='self',
                    ctx=Load()),
                  attr='mean',
                  ctx=Load())),
              op=Div(),
              right=Attribute(
                value=Name(
                  id='self',
                  ctx=Load()),
                attr='std',
                ctx=Load()))),
          Assign(
            targets=[Name(
              id='x',
              ctx=Store())],
            value=Call(
              func=Attribute(
                value=Name(
                  id='F',
                  ctx=Load()),
                attr='transpose',
                ctx=Load()),
              args=[
                Name(
                  id='x',
                  ctx=Load()),
                Tuple(
                  elts=[
                    Num(n=0),
                    Num(n=3),
                    Num(n=1),
                    Num(n=2)],
                  ctx=Load())],
              keywords=[])),
          Return(value=Name(
            id='x',
            ctx=Load()))],
        decorator_list=[],
        returns=None)],
    decorator_list=[]),
  ClassDef(
    name='MindSporeModel',
    bases=[Attribute(
      value=Name(
        id='nn',
        ctx=Load()),
      attr='Cell',
      ctx=Load())],
    keywords=[],
    body=[
      Expr(value=Str(s='\n    Alexnet\n    ')),
      FunctionDef(
        name='__init__',
        args=arguments(
          args=[
            arg(
              arg='self',
              annotation=None),
            arg(
              arg='num_classes',
              annotation=None),
            arg(
              arg='channel',
              annotation=None),
            arg(
              arg='phase',
              annotation=None),
            arg(
              arg='include_top',
              annotation=None),
            arg(
              arg='off_load',
              annotation=None)],
          vararg=None,
          kwonlyargs=[],
          kw_defaults=[],
          kwarg=None,
          defaults=[
            Num(n=10),
            Num(n=3),
            Str(s='train'),
            NameConstant(value=True),
            NameConstant(value=False)]),
        body=[
          Expr(value=Call(
            func=Attribute(
              value=Call(
                func=Name(
                  id='super',
                  ctx=Load()),
                args=[
                  Name(
                    id='MindSporeModel',
                    ctx=Load()),
                  Name(
                    id='self',
                    ctx=Load())],
                keywords=[]),
              attr='__init__',
              ctx=Load()),
            args=[],
            keywords=[])),
          Assign(
            targets=[Attribute(
              value=Name(
                id='self',
                ctx=Load()),
              attr='off_load',
              ctx=Store())],
            value=Name(
              id='off_load',
              ctx=Load())),
          If(
            test=Compare(
              left=Attribute(
                value=Name(
                  id='self',
                  ctx=Load()),
                attr='off_load',
                ctx=Load()),
              ops=[Is()],
              comparators=[NameConstant(value=True)]),
            body=[Assign(
              targets=[Attribute(
                value=Name(
                  id='self',
                  ctx=Load()),
                attr='data_trans',
                ctx=Store())],
              value=Call(
                func=Name(
                  id='DataNormTranspose',
                  ctx=Load()),
                args=[],
                keywords=[]))],
            orelse=[]),
          Assign(
            targets=[Attribute(
              value=Name(
                id='self',
                ctx=Load()),
              attr='conv1',
              ctx=Store())],
            value=Call(
              func=Attribute(
                value=Name(
                  id='nn',
                  ctx=Load()),
                attr='Conv2d',
                ctx=Load()),
              args=[],
              keywords=[
                keyword(
                  arg='in_channels',
                  value=Name(
                    id='channel',
                    ctx=Load())),
                keyword(
                  arg='out_channels',
                  value=Num(n=64)),
                keyword(
                  arg='kernel_size',
                  value=Num(n=11)),
                keyword(
                  arg='stride',
                  value=Num(n=4)),
                keyword(
                  arg='pad_mode',
                  value=Str(s='same')),
                keyword(
                  arg='has_bias',
                  value=NameConstant(value=True))])),
          Assign(
            targets=[Attribute(
              value=Name(
                id='self',
                ctx=Load()),
              attr='conv2',
              ctx=Store())],
            value=Call(
              func=Attribute(
                value=Name(
                  id='nn',
                  ctx=Load()),
                attr='Conv2d',
                ctx=Load()),
              args=[],
              keywords=[
                keyword(
                  arg='in_channels',
                  value=Num(n=64)),
                keyword(
                  arg='out_channels',
                  value=Num(n=128)),
                keyword(
                  arg='kernel_size',
                  value=Num(n=5)),
                keyword(
                  arg='stride',
                  value=Num(n=1)),
                keyword(
                  arg='pad_mode',
                  value=Str(s='same')),
                keyword(
                  arg='has_bias',
                  value=NameConstant(value=True))])),
          Assign(
            targets=[Attribute(
              value=Name(
                id='self',
                ctx=Load()),
              attr='conv3',
              ctx=Store())],
            value=Call(
              func=Attribute(
                value=Name(
                  id='nn',
                  ctx=Load()),
                attr='Conv2d',
                ctx=Load()),
              args=[],
              keywords=[
                keyword(
                  arg='in_channels',
                  value=Num(n=128)),
                keyword(
                  arg='out_channels',
                  value=Num(n=192)),
                keyword(
                  arg='kernel_size',
                  value=Num(n=3)),
                keyword(
                  arg='stride',
                  value=Num(n=1)),
                keyword(
                  arg='pad_mode',
                  value=Str(s='same')),
                keyword(
                  arg='has_bias',
                  value=NameConstant(value=True))])),
          Assign(
            targets=[Attribute(
              value=Name(
                id='self',
                ctx=Load()),
              attr='conv4',
              ctx=Store())],
            value=Call(
              func=Attribute(
                value=Name(
                  id='nn',
                  ctx=Load()),
                attr='Conv2d',
                ctx=Load()),
              args=[],
              keywords=[
                keyword(
                  arg='in_channels',
                  value=Num(n=192)),
                keyword(
                  arg='out_channels',
                  value=Num(n=256)),
                keyword(
                  arg='kernel_size',
                  value=Num(n=3)),
                keyword(
                  arg='stride',
                  value=Num(n=1)),
                keyword(
                  arg='pad_mode',
                  value=Str(s='same')),
                keyword(
                  arg='has_bias',
                  value=NameConstant(value=True))])),
          Assign(
            targets=[Attribute(
              value=Name(
                id='self',
                ctx=Load()),
              attr='conv5',
              ctx=Store())],
            value=Call(
              func=Attribute(
                value=Name(
                  id='nn',
                  ctx=Load()),
                attr='Conv2d',
                ctx=Load()),
              args=[],
              keywords=[
                keyword(
                  arg='in_channels',
                  value=Num(n=256)),
                keyword(
                  arg='out_channels',
                  value=Num(n=256)),
                keyword(
                  arg='kernel_size',
                  value=Num(n=3)),
                keyword(
                  arg='stride',
                  value=Num(n=1)),
                keyword(
                  arg='pad_mode',
                  value=Str(s='same')),
                keyword(
                  arg='has_bias',
                  value=NameConstant(value=True))])),
          Assign(
            targets=[Attribute(
              value=Name(
                id='self',
                ctx=Load()),
              attr='relu',
              ctx=Store())],
            value=Call(
              func=Attribute(
                value=Name(
                  id='P',
                  ctx=Load()),
                attr='ReLU',
                ctx=Load()),
              args=[],
              keywords=[])),
          Assign(
            targets=[Attribute(
              value=Name(
                id='self',
                ctx=Load()),
              attr='max_pool2d',
              ctx=Store())],
            value=Call(
              func=Attribute(
                value=Name(
                  id='nn',
                  ctx=Load()),
                attr='MaxPool2d',
                ctx=Load()),
              args=[],
              keywords=[
                keyword(
                  arg='kernel_size',
                  value=Num(n=3)),
                keyword(
                  arg='stride',
                  value=Num(n=2)),
                keyword(
                  arg='pad_mode',
                  value=Str(s='valid'))])),
          Assign(
            targets=[Attribute(
              value=Name(
                id='self',
                ctx=Load()),
              attr='include_top',
              ctx=Store())],
            value=Name(
              id='include_top',
              ctx=Load())),
          If(
            test=Attribute(
              value=Name(
                id='self',
                ctx=Load()),
              attr='include_top',
              ctx=Load()),
            body=[
              Assign(
                targets=[Name(
                  id='dropout_ratio',
                  ctx=Store())],
                value=Num(n=0.65)),
              If(
                test=Compare(
                  left=Name(
                    id='phase',
                    ctx=Load()),
                  ops=[Eq()],
                  comparators=[Str(s='test')]),
                body=[Assign(
                  targets=[Name(
                    id='dropout_ratio',
                    ctx=Store())],
                  value=Num(n=1.0))],
                orelse=[]),
              Assign(
                targets=[Attribute(
                  value=Name(
                    id='self',
                    ctx=Load()),
                  attr='flatten',
                  ctx=Store())],
                value=Call(
                  func=Attribute(
                    value=Name(
                      id='nn',
                      ctx=Load()),
                    attr='Flatten',
                    ctx=Load()),
                  args=[],
                  keywords=[])),
              Assign(
                targets=[Attribute(
                  value=Name(
                    id='self',
                    ctx=Load()),
                  attr='fc1',
                  ctx=Store())],
                value=Call(
                  func=Attribute(
                    value=Name(
                      id='nn',
                      ctx=Load()),
                    attr='Dense',
                    ctx=Load()),
                  args=[],
                  keywords=[
                    keyword(
                      arg='in_channels',
                      value=BinOp(
                        left=BinOp(
                          left=Num(n=6),
                          op=Mult(),
                          right=Num(n=6)),
                        op=Mult(),
                        right=Num(n=256))),
                    keyword(
                      arg='out_channels',
                      value=Num(n=4096)),
                    keyword(
                      arg='has_bias',
                      value=NameConstant(value=True))])),
              Assign(
                targets=[Attribute(
                  value=Name(
                    id='self',
                    ctx=Load()),
                  attr='fc2',
                  ctx=Store())],
                value=Call(
                  func=Attribute(
                    value=Name(
                      id='nn',
                      ctx=Load()),
                    attr='Dense',
                    ctx=Load()),
                  args=[],
                  keywords=[
                    keyword(
                      arg='in_channels',
                      value=Num(n=4096)),
                    keyword(
                      arg='out_channels',
                      value=Num(n=4096)),
                    keyword(
                      arg='has_bias',
                      value=NameConstant(value=True))])),
              Assign(
                targets=[Attribute(
                  value=Name(
                    id='self',
                    ctx=Load()),
                  attr='fc3',
                  ctx=Store())],
                value=Call(
                  func=Attribute(
                    value=Name(
                      id='nn',
                      ctx=Load()),
                    attr='Dense',
                    ctx=Load()),
                  args=[],
                  keywords=[
                    keyword(
                      arg='in_channels',
                      value=Num(n=4096)),
                    keyword(
                      arg='out_channels',
                      value=Name(
                        id='num_classes',
                        ctx=Load())),
                    keyword(
                      arg='has_bias',
                      value=NameConstant(value=True))])),
              Assign(
                targets=[Attribute(
                  value=Name(
                    id='self',
                    ctx=Load()),
                  attr='dropout',
                  ctx=Store())],
                value=Call(
                  func=Attribute(
                    value=Name(
                      id='nn',
                      ctx=Load()),
                    attr='Dropout',
                    ctx=Load()),
                  args=[Name(
                    id='dropout_ratio',
                    ctx=Load())],
                  keywords=[]))],
            orelse=[])],
        decorator_list=[],
        returns=None),
      FunctionDef(
        name='construct',
        args=arguments(
          args=[
            arg(
              arg='self',
              annotation=None),
            arg(
              arg='x',
              annotation=None)],
          vararg=None,
          kwonlyargs=[],
          kw_defaults=[],
          kwarg=None,
          defaults=[]),
        body=[
          Expr(value=Str(s='define network')),
          Assign(
            targets=[Name(
              id='conv1_opt',
              ctx=Store())],
            value=Call(
              func=Attribute(
                value=Name(
                  id='self',
                  ctx=Load()),
                attr='conv1',
                ctx=Load()),
              args=[Name(
                id='x',
                ctx=Load())],
              keywords=[])),
          Assign(
            targets=[Name(
              id='relu_1_opt',
              ctx=Store())],
            value=Call(
              func=Attribute(
                value=Name(
                  id='self',
                  ctx=Load()),
                attr='relu',
                ctx=Load()),
              args=[Name(
                id='conv1_opt',
                ctx=Load())],
              keywords=[])),
          Assign(
            targets=[Name(
              id='max_pool2d_1_opt',
              ctx=Store())],
            value=Call(
              func=Attribute(
                value=Name(
                  id='self',
                  ctx=Load()),
                attr='max_pool2d',
                ctx=Load()),
              args=[Name(
                id='relu_1_opt',
                ctx=Load())],
              keywords=[])),
          Assign(
            targets=[Name(
              id='conv2_opt',
              ctx=Store())],
            value=Call(
              func=Attribute(
                value=Name(
                  id='self',
                  ctx=Load()),
                attr='conv2',
                ctx=Load()),
              args=[Name(
                id='max_pool2d_1_opt',
                ctx=Load())],
              keywords=[])),
          Assign(
            targets=[Name(
              id='relu_2_opt',
              ctx=Store())],
            value=Call(
              func=Attribute(
                value=Name(
                  id='self',
                  ctx=Load()),
                attr='relu',
                ctx=Load()),
              args=[Name(
                id='conv2_opt',
                ctx=Load())],
              keywords=[])),
          Assign(
            targets=[Name(
              id='max_pool2d_2_opt',
              ctx=Store())],
            value=Call(
              func=Attribute(
                value=Name(
                  id='self',
                  ctx=Load()),
                attr='max_pool2d',
                ctx=Load()),
              args=[Name(
                id='relu_2_opt',
                ctx=Load())],
              keywords=[])),
          Assign(
            targets=[Name(
              id='conv3_opt',
              ctx=Store())],
            value=Call(
              func=Attribute(
                value=Name(
                  id='self',
                  ctx=Load()),
                attr='conv3',
                ctx=Load()),
              args=[Name(
                id='max_pool2d_2_opt',
                ctx=Load())],
              keywords=[])),
          Assign(
            targets=[Name(
              id='relu_3_opt',
              ctx=Store())],
            value=Call(
              func=Attribute(
                value=Name(
                  id='self',
                  ctx=Load()),
                attr='relu',
                ctx=Load()),
              args=[Name(
                id='conv3_opt',
                ctx=Load())],
              keywords=[])),
          Assign(
            targets=[Name(
              id='conv4_opt',
              ctx=Store())],
            value=Call(
              func=Attribute(
                value=Name(
                  id='self',
                  ctx=Load()),
                attr='conv4',
                ctx=Load()),
              args=[Name(
                id='relu_3_opt',
                ctx=Load())],
              keywords=[])),
          Assign(
            targets=[Name(
              id='relu_4_opt',
              ctx=Store())],
            value=Call(
              func=Attribute(
                value=Name(
                  id='self',
                  ctx=Load()),
                attr='relu',
                ctx=Load()),
              args=[Name(
                id='conv4_opt',
                ctx=Load())],
              keywords=[])),
          Assign(
            targets=[Name(
              id='conv5_opt',
              ctx=Store())],
            value=Call(
              func=Attribute(
                value=Name(
                  id='self',
                  ctx=Load()),
                attr='conv5',
                ctx=Load()),
              args=[Name(
                id='relu_4_opt',
                ctx=Load())],
              keywords=[])),
          Assign(
            targets=[Name(
              id='relu_5_opt',
              ctx=Store())],
            value=Call(
              func=Attribute(
                value=Name(
                  id='self',
                  ctx=Load()),
                attr='relu',
                ctx=Load()),
              args=[Name(
                id='conv5_opt',
                ctx=Load())],
              keywords=[])),
          Assign(
            targets=[Name(
              id='max_pool2d_3_opt',
              ctx=Store())],
            value=Call(
              func=Attribute(
                value=Name(
                  id='self',
                  ctx=Load()),
                attr='max_pool2d',
                ctx=Load()),
              args=[Name(
                id='relu_5_opt',
                ctx=Load())],
              keywords=[])),
          If(
            test=UnaryOp(
              op=Not(),
              operand=Attribute(
                value=Name(
                  id='self',
                  ctx=Load()),
                attr='include_top',
                ctx=Load())),
            body=[Return(value=Name(
              id='max_pool2d_3_opt',
              ctx=Load()))],
            orelse=[]),
          Assign(
            targets=[Name(
              id='flatten_opt',
              ctx=Store())],
            value=Call(
              func=Attribute(
                value=Name(
                  id='self',
                  ctx=Load()),
                attr='flatten',
                ctx=Load()),
              args=[Name(
                id='max_pool2d_3_opt',
                ctx=Load())],
              keywords=[])),
          Assign(
            targets=[Name(
              id='fc1_opt',
              ctx=Store())],
            value=Call(
              func=Attribute(
                value=Name(
                  id='self',
                  ctx=Load()),
                attr='fc1',
                ctx=Load()),
              args=[Name(
                id='flatten_opt',
                ctx=Load())],
              keywords=[])),
          Assign(
            targets=[Name(
              id='relu_6_opt',
              ctx=Store())],
            value=Call(
              func=Attribute(
                value=Name(
                  id='self',
                  ctx=Load()),
                attr='relu',
                ctx=Load()),
              args=[Name(
                id='fc1_opt',
                ctx=Load())],
              keywords=[])),
          Assign(
            targets=[Name(
              id='dropout_1_opt',
              ctx=Store())],
            value=Call(
              func=Attribute(
                value=Name(
                  id='self',
                  ctx=Load()),
                attr='dropout',
                ctx=Load()),
              args=[Name(
                id='relu_6_opt',
                ctx=Load())],
              keywords=[])),
          Assign(
            targets=[Name(
              id='fc2_opt',
              ctx=Store())],
            value=Call(
              func=Attribute(
                value=Name(
                  id='self',
                  ctx=Load()),
                attr='fc2',
                ctx=Load()),
              args=[Name(
                id='dropout_1_opt',
                ctx=Load())],
              keywords=[])),
          Assign(
            targets=[Name(
              id='relu_7_opt',
              ctx=Store())],
            value=Call(
              func=Attribute(
                value=Name(
                  id='self',
                  ctx=Load()),
                attr='relu',
                ctx=Load()),
              args=[Name(
                id='fc2_opt',
                ctx=Load())],
              keywords=[])),
          Assign(
            targets=[Name(
              id='dropout_2_opt',
              ctx=Store())],
            value=Call(
              func=Attribute(
                value=Name(
                  id='self',
                  ctx=Load()),
                attr='dropout',
                ctx=Load()),
              args=[Name(
                id='relu_7_opt',
                ctx=Load())],
              keywords=[])),
          Assign(
            targets=[Name(
              id='fc3_opt',
              ctx=Store())],
            value=Call(
              func=Attribute(
                value=Name(
                  id='self',
                  ctx=Load()),
                attr='fc3',
                ctx=Load()),
              args=[Name(
                id='dropout_2_opt',
                ctx=Load())],
              keywords=[])),
          Return(value=Name(
            id='fc3_opt',
            ctx=Load()))],
        decorator_list=[],
        returns=None)],
    decorator_list=[])])